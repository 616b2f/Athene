@using Athene.Inventory.Abstractions.Models
@model IEnumerable<Article>
@{
    Layout = "_Layout";
    ViewBag.Title = Localizer["Inventory search"];
}

<div class="row">
	<div class="col-md-12">
		<h3>@Localizer["Inventory search"]</h3>
	</div>
</div>
<div class="row">

    <form class="col-md-offset-3 col-md-6" asp-controller="Inventory" asp-action="Index" method="get">
        <div class="input-group">
            <div class="input-group-btn">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@Localizer["All"] <span class="caret"></span></button>
                <ul class="dropdown-menu dropdown-menu-right">
                    @foreach (string targetGroup in ViewBag.SearchTargets)
                    {
                      <li><a href="#">@targetGroup</a></li>
                    }
                </ul>
            </div>
            <input name="q" type="text" class="form-control" />
            <span class="input-group-btn">
                <button class="btn btn-primary" type="submit"><span class="glyphicon glyphicon-search"></span> @Localizer["Search"]</button>
            </span>
        </div>
    </form>
    <div>
        <a class="btn btn-default" href="@Url.Action("Create", "Books")"><span class="glyphicon glyphicon-plus"></span> @Localizer["Add"]</a>
    </div>
</div>
@if (Model == null)
{
}
else if (Model.Count() == 0)
{
 <p>@Localizer["Nothing found"]</p>
}
else if (Model.Count() > 0)
{
    @Localizer["{0} Matches", Model.Count()]<br/>
    foreach (var item in Model)
    {
        if (item is Book)
        {
            var book = item as Book;
            @await Html.PartialAsync("_BookItemPreview", book);
        }
    }
}
